#!/bin/bash

echo "Resetting permissions ..."

chmod -R g+w /home/ubuntu/workspace
chown -R ubuntu:ubuntu /home/ubuntu >/dev/null 2>&1

chmod 755 /usr/bin/version50

echo "Setting configuration files ..."
chmod 644 /etc/profile.d/ide50.sh

# prep dropbox functions
if ! grep -Fxq "source /home/ubuntu/.dropbox50" ~/.bashrc; then
    echo "source /home/ubuntu/.dropbox50" >> /home/ubuntu/.bashrc
fi

groupadd -r courses > /dev/null 2>&1 || true
adduser --gecos "CS50,,,," --ingroup courses --disabled-login --system cs50 > /dev/null 2>&1 || true

chown -R cs50.courses /home/cs50
find /home/cs50 -type d -exec chmod 755 {} \;
find /home/cs50 -type f -exec chmod 644 {} \;
chmod 711 /home/cs50/pset1/{mario,greedy} /home/cs50/hacker1/{credit,mario} /home/cs50/hacker2/initials /home/cs50/pset2/{initials,caesar,vigenere,devigenere} /home/cs50/pset3/find /home/cs50/hacker3/find /home/cs50/pset4/{peek,resize} /home/cs50/hacker4/{peek,resize} /home/cs50/pset5/speller /home/cs50/pset6/server
chmod 755 /home/cs50/pset5/challenge

# prep instance's index page
if [ -f /var/www/html/index.html ]; then
    rm -f /var/www/html/index.html
fi
chmod 644 /var/www/html/index.php

# remove apache test file from workspace
if grep -qs '^Success$' /var/www/html/file; then
    rm -f /var/www/html/file
fi

rm -rf /home/ubuntu/cs50
# remove old source file if it exists
if [ -f /etc/profile.d/app.sh ]; then
    rm -f /etc/profile.d/app.sh
fi

####################
# the remaining requires a recent update50 and some env variables must exist
source /etc/version50 2>/dev/null || true
if [ "${version:-0}" -lt "16" ] || [ -z "$C9_USER" ]; then
    echo
    echo "Please run update50 again to complete the installation!"
    exit 0
fi

echo "Setting up MySQL ..."

# create a password for some internal services if it doesn't exist yet
eval password_file="$(printf "~%q" ubuntu)"/.password50
if [ ! -f "$password_file" ]; then
    # generate 16 character alphanumeric password from urandom
    password="$(tr -dc [:alnum:] </dev/urandom | head -c16)"

    # store
    echo "password=\"$password\"" >"$password_file"
    chown ubuntu:ubuntu $password_file
    chmod 600 $password_file
else
    # let's use the existing password
    source $password_file
fi

# was apache running? (status returns 0 iff running)
apache_running=$(service apache2 status >/dev/null)$?

# stop apache if running
if [ $apache_running == 0 ]; then
    sudo -Eu ubuntu apachectl stop >/dev/null 2>&1
fi

# was MySQL running?
mysql_running=$(service mysql status >/dev/null)$?

# stop MySQL if running
if [ $mysql_running == 0 ]; then
    service mysql stop >/dev/null 2>&1
fi

# Changes configuration file to skip table grants
mv /etc/mysql/my.cnf /etc/mysql/.my.cnf
cat > /etc/mysql/my.cnf <<"EOF"
[mysqld]
datadir=/var/lib/mysql
skip-grant-tables
skip-networking
socket=/var/run/mysqld/mysqld.sock
user=mysql
pid-file=/var/run/mysqld/mysqld.pid
port=3306
EOF

service mysql start >/dev/null 2>&1

# MySQL username matches the external C9 username
username=${C9_USER:0:16}

# reset user and password in MySQL
mysql --force --user=root > /dev/null 2>&1 <<EOF
DELETE FROM mysql.user WHERE User = '';
DELETE FROM mysql.user WHERE User = '$username';
INSERT INTO mysql.user (Host, User, Password, Grant_priv, Super_priv) VALUES('localhost', '$username', PASSWORD('$password'), 'Y', 'Y');
FLUSH PRIVILEGES;
GRANT ALL ON *.* TO '$username'@'localhost';
EOF

sleep 1

# Put original config file back in place
service mysql stop >/dev/null 2>&1
mv /etc/mysql/.my.cnf /etc/mysql/my.cnf

# install phpmyadmin if it's not yet installed
# adapted from C9's install script: /mnt/shared/bin/phpmyadmin-ctl
if [ ! -e /etc/apache2/sites-enabled/phpmyadmin.conf ]; then
    ln -s /etc/phpmyadmin/apache.conf /etc/apache2/sites-enabled/phpmyadmin.conf

    echo "Installing phpMyAdmin ..."

    # enable mcrypt
    php5enmod mcrypt

    chmod a+r /etc/phpmyadmin/config-db.php
    chmod a+r /var/lib/phpmyadmin/blowfish_secret.inc.php
    chmod a+r /var/lib/phpmyadmin/config.inc.php

    # Set host to 127.0.0.1
    sed -i "s:localhost:127.0.0.1:g" /etc/phpmyadmin/config.inc.php

    #Fix tables
    sed -i "s:'pma_\([^_]\):'pma__\1:" /etc/phpmyadmin/config.inc.php

    #Fix login to database
    sed -i "s:\$dbuser='phpmyadmin':\$dbuser='$username':" /etc/phpmyadmin/config-db.php
    sed -i "s:\$dbpass='[a-zA-Z0-9]*':\$dbpass='$password':" /etc/phpmyadmin/config-db.php

    # hide certain databases
    if ! grep -q 'hide_db' /etc/phpmyadmin/config.inc.php; then
        # inject hide_db inside of an if statement
        sed -i 's:if (!empty($dbname)) {:&\
            /* Hide certain databases */\
            $cfg["Servers"][\$i]["hide_db"] = "^(c9|information_schema|mysql|performance_schema|phpmyadmin)$";\n:' \
            /etc/phpmyadmin/config.inc.php
    fi

    # Allow Opening in an iframe (in editor)
    if ! grep -q 'AllowThirdPartyFraming' /etc/phpmyadmin/config.inc.php; then
        sed -i "$ a\$cfg[\"AllowThirdPartyFraming\"] = true;" /etc/phpmyadmin/config.inc.php
    fi

    service mysql start >/dev/null 2>&1

    mysql -u $username -p$password -e "CREATE DATABASE IF NOT EXISTS phpmyadmin" &>/dev/null
    zcat /usr/share/doc/phpmyadmin/examples/create_tables.sql.gz | mysql -u $username -p$password phpmyadmin

    service mysql stop >/dev/null 2>&1

fi

# restart apache if it was running
if [ $apache_running == 0 ]; then
    service apache2 start >/dev/null 2>&1
fi

# restart mysql if it was running
if [ $mysql_running == 0 ]; then
    service mysql start >/dev/null 2>&1
fi

echo
echo "All done! <3"

exit 0

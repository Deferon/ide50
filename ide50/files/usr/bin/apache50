#!/bin/bash

usage() {
    echo "Usage: `basename $0` [start VHOST_DIR|restart|reload|stop|status]" 1>&2
    exit 1
}

# verify usage: "start" requires another param, all others require 1
if ([ "$1" == "start" ] && [ $# -ne 2 ]) || ([ "$1" != "start" ] && [ $# -ne 1 ]); then
    usage
fi

# only run as ubuntu
if [ "$(whoami)" != "ubuntu" ]; then
    echo "This script must only be run by the ubuntu user (don't use sudo)!"
    exit 1
fi

start() {
    # ensure the param is a directory, expand it if so
    if  [ ! -d "$1" ]; then
        usage
    fi
    vhost=$(readlink -f "$1")

    echo "Setting Apache's document root to ${vhost} ..."

    # disable prior cs50 configuration, if available
    sudo a2disconf cs50 >/dev/null 2>&1

    # copy template over
    sudo cp /etc/apache2/conf-available/cs50-template.conf /etc/apache2/conf-available/cs50.conf
    sudo chmod 644 /etc/apache2/conf-available/cs50.conf

    # update vhost dir in conf
    sudo sed -i "s#/home/ubuntu/workspace/vhosts#$vhost#g" /etc/apache2/conf-available/cs50.conf

    # configure apache for online or offline
    if [ -z ${IDE_OFFLINE+x} ]; then
        # online IDE, externally served via proxy at C9_HOSTNAME over https
        domain="https://$(hostname50)"
    else
        # offline IDE, use hostname over http
        domain="http://$(hostname50)"
    fi
    sudo sed -i "s#ServerName.*\$#ServerName $domain#" /etc/apache2/conf-available/cs50.conf

    # enable the new config
    sudo a2enconf cs50 >/dev/null 2>&1

    # make sure user can access log and pid files
    sudo chown -R ubuntu:ubuntu /home/ubuntu/lib/apache2

    # launch
    service apache2 start

    if [ $? -eq 0 ]; then
        echo "Apache started successfully!"
        echo "Your site is now available at ${domain}"
    else
        echo "Apache failed to start!"
        exit 3
    fi
}

# determine apache's status
running=$(service apache2 status >/dev/null)$?

case "$1" in
    start)
        if [ $running == 0 ]; then
            echo "Apache is already running!" 1>&2
            exit 2
        fi
        start $2
    ;;
    stop)
        if [ $running != 0 ]; then
            echo "Apache is not running!"
            exit 2
        fi

        service apache2 stop
    ;;
    reload)
        service apache2 reload
    ;;
    restart)
        service apache2 restart
    ;;
    status)
        if [ $running == 0 ]; then
            echo "Apache is running!"
        else
            echo "Apache is not running."
            exit $running
        fi
    ;;
    *)
        usage
    ;;
esac

exit 0